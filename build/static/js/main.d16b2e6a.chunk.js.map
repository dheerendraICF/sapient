{"version":3,"sources":["components/templates/Image.js","components/templates/MissionDetails.js","components/templates/CardList.js","components/templates/Templates.js","App.js","serviceWorker.js","index.js"],"names":["Image","image","console","log","media","srcset","links","mission_patch_small","data-srcset","mission_patch","className","src","alt","MissionDetails","mission","list","mission_name","flight_number","mission_id","length","map","id","key","launch_year","launch_success","is_tentative","CardList","props","state","selectedList","cardItemsIds","cardItems","nextProps","this","setState","includes","splice","indexOf","push","launchYear","idx","onClick","e","handleClick","React","Component","Templates","launchProgram","axios","get","then","res","programs","data","tempLaunchYear","Set","App","name","content","Boolean","window","location","hostname","match","ReactDOM","hydrate","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d16b2e6a.chunk.js","sourcesContent":["import React  from 'react';\n\nfunction Image(image) {\n    console.log(image)\n    return (\n        <picture>\n            <source media=\"(max-width:575px)\" srcset={image.links.mission_patch_small} data-srcset={image.links.mission_patch_small} />\n            <source media=\"(max-width:1024px)\" srcset={image.links.mission_patch} data-srcset={image.links.mission_patch}/>\n            <img className=\"space-mission--image\" src={image.links.mission_patch} alt=\"Nature\"/>\n        </picture>\n    );\n}\n\nexport default Image;\n\n","import React from 'react';\n\nfunction MissionDetails(mission) {\n    let list = mission.list;\n    return (\n        <section className=\"space-mission--details\">\n            <h3>{list.mission_name} #{list.flight_number}</h3>\n            <ul className=\"space-mission--missionIds space-mission--info\">\n                {(list.mission_id.length > 0 ? <label>Mission Ids</label> : '')}\n                {list.mission_id.map(id => <li key={id}>{id}</li>)}\n            </ul>\n            <p className=\"space-mission--info\">\n                <label>Launch Year</label>\n                <span>{list.launch_year}</span>\n            </p>\n            <p className=\"space-mission--info\">\n                <label>Successfully Launch</label>\n                <span>{list.launch_success ? \"Yes\" : \"No\"}</span>\n            </p>\n            <p className=\"space-mission--info\">\n                <label>Successfully Lannding</label>\n                <span>{list.is_tentative ? \"Yes\" : \"No\"}</span>\n            </p>\n        </section>\n    );\n}\n\nexport default MissionDetails;\n\n","import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport { Fragment } from 'react';\nimport Image from './Image';\nimport MissionDetails from './MissionDetails';\n\nclass CardList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedList: [],\n      cardItemsIds: [],\n      cardItems: [],\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    if (nextProps.cardItems !== this.props.cardItems) {\n      this.setState({ cardItems: nextProps.cardItems });\n    }\n  }\n  filterCardList() {\n    let selectedList = this.state.cardItems.map(list => {\n      if (list.includes(this.state.selectedList) ||\n        (this.state.selectedList == \"sucss_lnch_yes\" && list.launch_success == true) ||\n        (this.state.selectedList == \"sucss_lnch_no\" && list.launch_success == false) ||\n        (this.state.selectedList == \"sucss_lnd_yes\" && list.launch_success == true) ||\n        (this.state.selectedList == \"sucss_lnd_no\" && list.launch_success == false)) {\n\n        return (\n          list.flight_number\n        )\n      }\n    });\n    console.log(\"selectedList:\",selectedList)\n  }\n  handleClick(list) {\n    let selectedList = this.state.selectedList;\n    if (selectedList.includes(list)) {\n      selectedList.splice(selectedList.indexOf(list), 1);\n      this.setState({ selectedList: selectedList });\n      console.log(\"delete selectedList: \", this.state.selectedList);\n    } else {\n      selectedList.push(list);\n      this.setState({ selectedList: selectedList });\n      console.log(\"selectedList: \", this.state.selectedList);\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <aside className=\"space-mission--filterSection\">\n          <h3>Filter</h3>\n          <section className=\"space-mission--filterWp\">\n            <label className=\"space-mission--filterLabel\">Launch Year</label>\n            <ul className=\"space-mission--filterList\">\n              {\n                this.props.launchYear.map((list, idx) =>\n                  <li className=\"space-mission--filterItem\" key={idx}>\n                    <button className={this.state.selectedList.includes(list) ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(list)}>\n                      {list}\n                    </button>\n                  </li>\n                )\n              }\n            </ul>\n          </section>\n          <section className=\"space-mission--filterWp\">\n            <label className=\"space-mission--filterLabel\">Successful Launch</label>\n            <ul className=\"space-mission--filterList\">\n              <li className=\"space-mission--filterItem\" key=\"sucss_lnch_yes\">\n                <button className={this.state.selectedList.includes(\"sucss_lnch_yes\") ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(\"sucss_lnch_yes\")}>\n                  Yes\n                    </button>\n              </li>\n              <li className=\"space-mission--filterItem\" key=\"sucss_lnch_no\">\n                <button className={this.state.selectedList.includes(\"sucss_lnch_no\") ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(\"sucss_lnch_no\")}>\n                  No\n                    </button>\n              </li>\n            </ul>\n          </section>\n          <section className=\"space-mission--filterWp\">\n            <label className=\"space-mission--filterLabel\">Successful Landing</label>\n            <ul className=\"space-mission--filterList\">\n              <li className=\"space-mission--filterItem\" key=\"sucss_lnch_yes\">\n                <button className={this.state.selectedList.includes(\"sucss_lnd_yes\") ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(\"sucss_lnd_yes\")}>\n                  Yes\n                    </button>\n              </li>\n              <li className=\"space-mission--filterItem\" key=\"sucss_lnch_no\">\n                <button className={this.state.selectedList.includes(\"sucss_lnd_no\") ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(\"sucss_lnd_no\")}>\n                  No\n                    </button>\n              </li>\n            </ul>\n          </section>\n        </aside>\n        <section>\n          <ul className=\"space-mission--list\">\n            {\n              this.props.cardItems.map(list => {\n                if (this.state.selectedList.includes(list.launch_year) ||\n                (this.state.selectedList.includes(\"sucss_lnch_yes\") && list.launch_success == true) ||\n                (this.state.selectedList.includes(\"sucss_lnch_no\") && list.launch_success == false) ||\n                (this.state.selectedList.includes(\"sucss_lnd_yes\") && list.launch_success == true) ||\n                (this.state.selectedList.includes(\"sucss_lnd_no\") && list.launch_success == false) || this.state.selectedList.length == 0) {\n                  return (\n                    <li className=\"space-mission--item\" key={list.flight_number}>\n                      <Image links={list.links} />\n                      <MissionDetails list={list} />\n                    </li>\n                  )\n                }\n              })\n            }\n          </ul>\n        </section>\n      </Fragment>\n    );\n  };\n}\n\nexport default CardList;\n\n","import React from 'react';\nimport CardList from './CardList';\nimport axios from 'axios';\n\n\nexport default class Templates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      launchProgram: [],\n      launchYear: [],\n    }\n  }\n  componentDidMount() {\n    const API = \"https://api.spacexdata.com/v3/launches?limit=100\";\n    axios.get(API)\n      .then(res => {\n        const programs = res.data;\n        let tempLaunchYear = programs.map(list => list.launch_year)\n        this.setState({ launchProgram: programs, launchYear: [... new Set(tempLaunchYear)] });\n      })\n  }\n\n  render() {\n    return (\n      <main className=\"space-mission\">\n        <h1>SpaceX Launch Programs</h1>\n        <section className=\"space-mission--wp\">\n          <CardList launchYear={this.state.launchYear} cardItems={this.state.launchProgram} />\n        </section>\n      </main>\n    )\n  }\n}","import React from 'react';\nimport './App.scss';\nimport Templates from './components/templates/Templates';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n     <Templates />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.hydrate(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}