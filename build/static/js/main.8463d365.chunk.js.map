{"version":3,"sources":["components/templates/Image.js","components/templates/MissionDetails.js","components/templates/CardList.js","components/templates/Templates.js","App.js","serviceWorker.js","index.js"],"names":["Image","image","media","srcSet","links","mission_patch_small","data-srcset","mission_patch","className","src","alt","MissionDetails","mission","list","mission_name","flight_number","mission_id","length","map","id","key","launch_year","launch_success","rocket","first_stage","cores","land_success","CardList","props","state","selectedList","cardItems","filterLnd","filterLunc","nextProps","this","setState","API","console","log","axios","get","then","res","programs","data","type","includes","status","tempselectedList","filterData","launchYear","idx","onClick","e","handleClick","React","Component","Templates","launchProgram","tempLaunchYear","Set","App","name","content","Boolean","window","location","hostname","match","ReactDOM","hydrate","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8463d365.chunk.js","sourcesContent":["import React  from 'react';\n\nfunction Image(image) {\n    return (\n        <picture>\n            <source media=\"(max-width:575px)\" srcSet={image.links.mission_patch_small} data-srcset={image.links.mission_patch_small} />\n            <source media=\"(max-width:1024px)\" srcSet={image.links.mission_patch} data-srcset={image.links.mission_patch}/>\n            <img className=\"space-mission--image\" src={image.links.mission_patch} alt=\"Nature\"/>\n        </picture>\n    );\n}\n\nexport default Image;\n\n","import React from 'react';\n\nfunction MissionDetails(mission) {\n    let list = mission.list;\n    return (\n        <section className=\"space-mission--details\">\n            <h3>{list.mission_name} #{list.flight_number}</h3>\n            <ul className=\"space-mission--missionIds space-mission--info\">\n                {(list.mission_id.length > 0 ? <label>Mission Ids</label> : '')}\n                {list.mission_id.map(id => <li key={id}>{id}</li>)}\n            </ul>\n            <p className=\"space-mission--info\">\n                <label>Launch Year</label>\n                <span>{list.launch_year}</span>\n            </p>\n            <p className=\"space-mission--info\">\n                <label>Successfully Launch</label>\n                <span>{list.launch_success ? \"Yes\" : \"No\"}</span>\n            </p>\n            <p className=\"space-mission--info\">\n                <label>Successfully Lannding</label>\n                <span>{(list.rocket.first_stage.cores[0].land_success) ? \"Yes\":\"No\"}</span>\n            </p>\n        </section>\n    );\n}\n\nexport default MissionDetails;\n\n","import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport { Fragment } from 'react';\nimport Image from './Image';\nimport MissionDetails from './MissionDetails';\nimport axios from 'axios';\n\nclass CardList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedList: [],\n      cardItems: [],\n      filterLnd: [],\n      filterLunc: [],\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    // You don't have to do this check first, but it can help prevent an unneeded render\n    if (nextProps.cardItems !== this.props.cardItems) {\n      this.setState({ cardItems: nextProps.cardItems });\n    }\n  }\n  filterData(API) {\n    console.log(\"API:\", API);\n    axios.get(API)\n      .then(res => {\n        const programs = res.data;\n        this.setState({ cardItems: programs });\n        console.log(\"programs:\", programs)\n      })\n  }\n  handleClick(list, type) {\n    let API = \"https://api.spaceXdata.com/v3/launches?limit=100\",\n      filterLunc = \"\",\n      filterLnd = \"\",\n      selectedList = \"\";\n\n    if (type == \"year\") {\n      selectedList = this.state.selectedList.includes(list) ? [] : list;\n      this.setState({ selectedList: selectedList });\n      API = \"https://api.spaceXdata.com/v3/launches?limit=100&launch_year=\" + selectedList;\n\n    }\n    if (type == \"lnch\") {\n      filterLunc = this.state.filterLunc.includes(list) ? [] : list;\n      let status = (filterLunc == \"sucss_lnch_yes\") ? \"true\" : \"false\";\n      this.setState({ filterLunc: filterLunc });\n      API = \"https://api.spaceXdata.com/v3/launches?limit=100&launch_success=\" + status;\n    }\n    if (type == \"lnd\") {\n      filterLnd = this.state.filterLnd.includes(list) ? [] : list;\n      let status = (filterLnd == \"sucss_lnd_yes\") ? \"true\" : \"false\";\n      this.setState({ filterLnd: list });\n      API = \"https://api.spaceXdata.com/v3/launches?limit=100&land_success=\" + status;\n\n    }\n    if ((this.state.selectedList.length > 0 || selectedList) && (filterLnd || this.state.filterLnd.length > 0) && (filterLunc || this.state.filterLunc.length > 0)) {\n        let tempselectedList =(selectedList) ? selectedList : this.state.selectedList;\n        let tempfilterLunc =(filterLunc) ? ((filterLunc == \"sucss_lnch_yes\") ? \"true\" : \"false\") : ((this.state.filterLunc == \"sucss_lnch_yes\") ? \"true\" : \"false\");\n        let tempfilterLnd =(filterLnd) ? ((filterLnd == \"sucss_lnd_yes\") ? \"true\" : \"false\") : ((this.state.filterLnd == \"sucss_lnd_yes\") ? \"true\" : \"false\");\n\n      API = \"https://api.spaceXdata.com/v3/launches?limit=100&launch_success=\" + tempfilterLunc + \"&land_success=\" + tempfilterLnd + \"&launch_year=\" + tempselectedList;\n    }\n    \n    this.filterData(API)\n\n  }\n  render() {\n    return (\n      <Fragment>\n        <aside className=\"space-mission--filterSection\">\n          <h3>Filter</h3>\n          <section className=\"space-mission--filterWp\">\n            <label className=\"space-mission--filterLabel\">Launch Year</label>\n            <ul className=\"space-mission--filterList\">\n              {\n                this.props.launchYear.map((list, idx) =>\n                  <li className=\"space-mission--filterItem\" key={idx}>\n                    <button className={this.state.selectedList.includes(list) ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(list, 'year')}>\n                      {list}\n                    </button>\n                  </li>\n                )\n              }\n            </ul>\n          </section>\n          <section className=\"space-mission--filterWp\">\n            <label className=\"space-mission--filterLabel\">Successful Launch</label>\n            <ul className=\"space-mission--filterList\">\n              <li className=\"space-mission--filterItem\" key=\"sucss_lnch_yes\">\n                <button className={this.state.filterLunc.includes(\"sucss_lnch_yes\") ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(\"sucss_lnch_yes\", 'lnch')}>\n                  Yes\n                    </button>\n              </li>\n              <li className=\"space-mission--filterItem\" key=\"sucss_lnch_no\">\n                <button className={this.state.filterLunc.includes(\"sucss_lnch_no\") ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(\"sucss_lnch_no\", 'lnch')}>\n                  No\n                    </button>\n              </li>\n            </ul>\n          </section>\n          <section className=\"space-mission--filterWp\">\n            <label className=\"space-mission--filterLabel\">Successful Landing</label>\n            <ul className=\"space-mission--filterList\">\n              <li className=\"space-mission--filterItem\" key=\"sucss_lnd_yes\">\n                <button className={this.state.filterLnd.includes(\"sucss_lnd_yes\") ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(\"sucss_lnd_yes\", \"lnd\")}>\n                  Yes\n                    </button>\n              </li>\n              <li className=\"space-mission--filterItem\" key=\"sucss_lnch_no\">\n                <button className={this.state.filterLnd.includes(\"sucss_lnd_no\") ? 'space-mission--filterBtn selected' : 'space-mission--filterBtn'} onClick={(e) => this.handleClick(\"sucss_lnd_no\", \"lnd\")}>\n                  No\n                    </button>\n              </li>\n            </ul>\n          </section>\n        </aside>\n        <section>\n          <ul className=\"space-mission--list\">\n            {\n              this.state.cardItems.map((list, idx) => {\n                return (\n                  <li className=\"space-mission--item\" key={idx}>\n                    <Image links={list.links} />\n                    <MissionDetails list={list} />\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </section>\n      </Fragment>\n    );\n  };\n}\n\nexport default CardList;\n\n","import React from 'react';\nimport CardList from './CardList';\nimport axios from 'axios';\n\n\nexport default class Templates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      launchProgram: [],\n      launchYear: [],\n    }\n  }\n  componentDidMount() {\n    const API = \"https://api.spacexdata.com/v3/launches?limit=100\";\n    axios.get(API)\n      .then(res => {\n        const programs = res.data;\n        let tempLaunchYear = programs.map(list => list.launch_year)\n        this.setState({ launchProgram: programs, launchYear: [... new Set(tempLaunchYear)] });\n      })\n  }\n\n  render() {\n    return (\n      <main className=\"space-mission\">\n        <h1>SpaceX Launch Programs</h1>\n        <section className=\"space-mission--wp\">\n          <CardList launchYear={this.state.launchYear} cardItems={this.state.launchProgram} />\n        </section>\n      </main>\n    )\n  }\n}","import React from 'react';\nimport './App.scss';\nimport Templates from './components/templates/Templates';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n     <Templates />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.hydrate(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}